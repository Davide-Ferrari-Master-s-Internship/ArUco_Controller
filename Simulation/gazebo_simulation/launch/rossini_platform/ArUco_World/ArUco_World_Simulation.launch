<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <arg name="real_camera" default="false"/>
	
	<!--remap arm_controller topics-->
	<remap unless="$(arg real_camera)" from="/arm_controller/command" to="/prbt/manipulator_joint_trajectory_controller/command"/>
	<remap unless="$(arg real_camera)" from="/arm_controller/follow_joint_trajectory/cancel" to="/prbt/manipulator_joint_trajectory_controller/follow_joint_trajectory/cancel"/>
	<remap unless="$(arg real_camera)" from="/arm_controller/follow_joint_trajectory/feedback" to="/prbt/manipulator_joint_trajectory_controller/follow_joint_trajectory/feedback"/>
	<remap unless="$(arg real_camera)" from="/arm_controller/follow_joint_trajectory/goal" to="/prbt/manipulator_joint_trajectory_controller/follow_joint_trajectory/goal"/>
	<remap unless="$(arg real_camera)" from="/arm_controller/follow_joint_trajectory/result" to="/prbt/manipulator_joint_trajectory_controller/follow_joint_trajectory/result"/>
	<remap unless="$(arg real_camera)" from="/arm_controller/follow_joint_trajectory/status" to="/prbt/manipulator_joint_trajectory_controller/follow_joint_trajectory/status"/>
	<remap unless="$(arg real_camera)" from="/arm_controller/state" to="/prbt/manipulator_joint_trajectory_controller/state"/>
	
	<!--remap virtual_camera topics-->
	<remap unless="$(arg real_camera)" from="/virtual_camera/camera_info" to="/C920/camera_info"/>
	<remap unless="$(arg real_camera)" from="/virtual_camera/image_raw" to="/C920/image_raw"/>
	<remap unless="$(arg real_camera)" from="/virtual_camera/image_raw/compressed" to="/C920/image_raw/compressed"/>
	<remap unless="$(arg real_camera)" from="/virtual_camera/image_raw/compressed/parameter_descriptions" to="/C920/image_raw/compressed/parameter_descriptions"/>
	<remap unless="$(arg real_camera)" from="/virtual_camera/image_raw/compressed/parameter_updates" to="/C920/image_raw/compressed/parameter_updates"/>
	<remap unless="$(arg real_camera)" from="/virtual_camera/image_raw/compressedDepth" to="/C920/image_raw/compressedDepth"/>
	<remap unless="$(arg real_camera)" from="/virtual_camera/image_raw/compressedDepth/parameter_descriptions" to="/C920/image_raw/compressedDepth/parameter_descriptions"/>
	<remap unless="$(arg real_camera)" from="/virtual_camera/image_raw/compressedDepth/parameter_updates" to="/C920/image_raw/compressedDepth/parameter_updates"/>
	<remap unless="$(arg real_camera)" from="/virtual_camera/image_raw/theora" to="/C920/image_raw/theora"/>
	<remap unless="$(arg real_camera)" from="/virtual_camera/image_raw/theora/parameter_descriptions" to="/C920/image_raw/theora/parameter_descriptions"/>
	<remap unless="$(arg real_camera)" from="/virtual_camera/image_raw/theora/parameter_updates" to="/C920/image_raw/theora/parameter_updates"/>
	<remap unless="$(arg real_camera)" from="/virtual_camera/parameter_descriptions" to="/C920/parameter_descriptions"/>
	<remap unless="$(arg real_camera)" from="/virtual_camera/parameter_updates" to="/C920/parameter_updates"/>
	
  <!--should be configured in simulation.launch-->
  <arg name="world_name_global" default="$(find gazebo_simulation)/launch/rossini_platform/ArUco_World/ArUco_world.world"/>
  
  <!--To launch RVIZ set the value to true-->
  <arg name="rviz" value="false"/>

  <!--To launch scanunifier set the value to true-->
  <arg name="scanunifier" value="false"/>

  <!--To move robot using teleop_keyboard-->
  <arg name="software_joystick" value="false"/>
  
	<!--To spawn camera on manipulator-->
  <arg name="spawn_camera" default="false"/>
  
  <!-- Robot pose -->
  <arg name="x" default="0"/>
  <arg name="y" default="0"/>
  <arg name="z" default="0"/>
  <arg name="roll" default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw" default="0"/>

<!---=================================================================================================================================================================-->

  <!--Gazebo Variables--> 
  <arg name="world" default="empty"/> 
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  <include file="$(find gazebo_simulation)/launch/rossini_platform/ArUco_World/ArUco_world.launch">
    <arg name="world_name" value="$(arg world_name_global)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>
<!---=================================================================================================================================================================-->

  <!--Robot description to param server-->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find gazebo_simulation)/robots/mmo_500.urdf.xacro'"/>

  <node name="mmo_500_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
  args="-urdf -param robot_description -model mmo_500 -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>
  
  <!--To publish Joint and Robot state-->

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
	<param name="publish_frequency" value="20.0"/>
  </node>

  <include file="$(find gazebo_simulation)/robots/config/controller/launch/controller_utils.launch"/>
  
  <!-- set pid parameters -->
  <!--rosparam command="load" file="$(find neo_simulation)/config/controller/gazebo_pid_gains.yaml" /-->

	<!-- Pilz -->
	<rosparam file="$(find gazebo_simulation)/robots/config/controller/arm_controller_pilz.yaml" command="load"/>
	<node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/> 

  <!-- Spawn Camera -->
  <group if="$(arg spawn_camera)">
		<param name="camera" command="$(find xacro)/xacro --inorder '$(find gazebo_simulation)/robots/urdf/camera.urdf'" />
		<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
		  args="-param camera -urdf -model camera -x 2 -y 2"/>
	</group>
	
	
	<!--	prbt demo.launch -	10s timed launch	-->
  <node pkg="timed_roslaunch" type="timed_roslaunch.sh" args="5 gazebo_simulation prbt_demo.launch" name="demo" output="screen" />
  
  <!--include file="$(find prbt_moveit_config)/launch/demo.launch">
     <arg name="start_rviz" value="false"/>
	</include-->
	
  <!-- Franka-emika -->
<!-- <rosparam file="$(find neo_simulation)/config/controller/arm_controller_franka.yaml" command="load"/>
<node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/> -->

<!---=================================================================================================================================================================-->
 
  <!--if arg scan-unifier is set to true-->

 <group if="$(arg scanunifier)">
 	<include file="$(find gazebo_simulation)/robots/config/mmo_500/scan_unifier/mmo_500_scan_unifier.launch"/>
 </group>   

<!---=================================================================================================================================================================-->
 
 <!--Neo control Package  **To use teleop-keyboard and joystick, neo_control package must be cloned to the workspace**--> 
 
 <!--if arg software_joystick is set to true-->

 <group if="$(arg software_joystick)">
   <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop_keyboard"  output="screen">
  </node>
 </group>

<!---=================================================================================================================================================================-->

</launch>
